import{d as g,s as l,v as y,o as T,c as b,u as c,g as p,I,N as D,D as i,x as u,M as L,y as k}from"./index.3bb17302.js";const f=[{id:"0090f468-5917-4124-98bd-1e7711ab360e",createdDate:"2022-01-01T05:00:00.000Z",name:"Neck",measurementType:"Inches"},{id:"09108d87-8337-4424-83a1-1ee5be5e8585",createdDate:"2022-01-01T05:00:00.000Z",name:"Left Calve",measurementType:"Inches"},{id:"0ee16da1-3c8d-48fc-9af1-41ec09cf6317",createdDate:"2022-01-01T05:00:00.000Z",name:"Right Calve",measurementType:"Inches"},{id:"222452a2-aa29-460e-85a8-4617092d1ba5",createdDate:"2022-01-01T05:00:00.000Z",name:"Shoulders",measurementType:"Inches"},{id:"3e3d0d91-3280-491d-967e-d56dcfc51520",createdDate:"2022-01-01T05:00:00.000Z",name:"Left Thigh",measurementType:"Inches"},{id:"43e3fc4e-b419-468c-9888-b5e072d81dfb",createdDate:"2022-01-01T05:00:00.000Z",name:"Body Fat",measurementType:"%"},{id:"843c6b0f-ce23-4468-9d67-dd1af076b10a",createdDate:"2022-01-01T05:00:00.000Z",name:"Right Thigh",measurementType:"Inches"},{id:"880cb344-e537-4f0f-bad4-e212a6df51cd",createdDate:"2022-01-01T05:00:00.000Z",name:"Chest",measurementType:"Inches"},{id:"96c7229d-91e8-4470-b0a9-ebb1234fe6e7",createdDate:"2022-01-01T05:00:00.000Z",name:"Left Forearm",measurementType:"Inches"},{id:"9fddbad2-ba89-4476-95e4-10d9969e782c",createdDate:"2022-01-01T05:00:00.000Z",name:"Right Bicep",measurementType:"Inches"},{id:"b4450018-1506-450f-a429-9903aded5c9b",createdDate:"2022-01-01T05:00:00.000Z",name:"Body Weight",measurementType:"Lbs"},{id:"e126e959-1675-4b3b-866c-261e453d8dae",createdDate:"2022-01-01T05:00:00.000Z",name:"Left Bicep",measurementType:"Inches"},{id:"ed12d669-cffd-45f7-802c-9025426341fa",createdDate:"2022-01-01T05:00:00.000Z",name:"Waist",measurementType:"Inches"},{id:"fa4c25c7-e1d5-48bf-975a-4fdfd2305646",createdDate:"2022-01-01T05:00:00.000Z",name:"Right Forearm",measurementType:"Inches"}],Z=g({__name:"DefaultsBtn",setup(h){const{log:e}=l(),{confirmDialog:n}=y();function d(){n("Load Defaults","Load default entires into appropriate tables in the database?",I.INFO,D.INFO,async()=>{try{await s()}catch(a){e.error("DefaultsBtn:onDefaults",a)}})}async function s(){await Promise.all([i.bulkAdd(u.MEASUREMENTS,f),i.bulkAdd(u.MEASUREMENT_RECORDS,o())])}function o(){let a=new Date("2022/01/01");const t=[];return f.forEach(m=>{for(let r=0;r<20;r++)t.push(new L({id:k(),createdDate:a.toISOString(),parentId:m.id,measurementValue:Number(Math.random().toString(10).substring(2,3))+5+r})),a=new Date(a.setDate(a.getDate()+1))}),t}return(a,t)=>(T(),b(c(p),{label:"Load Defaults",color:"primary",onClick:t[0]||(t[0]=m=>d())}))}}),_=g({__name:"TestLogsBtn",setup(h){const{log:e}=l();function n(){e.debug("This is a Debug Log (not saved)",{name:"generateTestLogs:Debug",message:"Debug message",stack:"Stack trace"}),e.info("This is an Info Log",{name:"generateTestLogs:Info",message:"Info message",stack:"Stack trace"}),e.warn("This is a Warning Log",{name:"generateTestLogs:Warning",message:"Warning message",stack:"Stack trace"}),e.error("This is an Error Log",{name:"generateTestLogs:Error",message:"Error message",stack:"Stack trace"}),e.critical("This is a Critical Log",{name:"generateTestLogs:Critical",message:"Critical message",stack:"Stack trace"})}return(d,s)=>(T(),b(c(p),{label:"Test Logs",color:c(D).INFO,onClick:s[0]||(s[0]=o=>n())},null,8,["color"]))}});export{_,Z as a};
