import{d as R,o as d,c as E,w as f,p as u,t as I,a as p,u as l,b as y,I as x,Q as k,h as g,x as A,aq as D,f as h,g as O,D as i,l as r,F as v,O as w,r as S,m as T,n as C,B as N,C as F,i as B,j as V,N as W,R as b}from"./index.9af118fa.js";import{Q as q}from"./QPage.746e522e.js";const $={class:"text-h6 q-mb-sm"},P=u("div",{class:"q-mb-sm"},"Remember to complete this exercise. No data is recorded.",-1),Q=R({__name:"ActiveReminderSection",props:{exerciseName:null},setup(a){return(o,c)=>(d(),E(l(k),{class:"q-py-sm"},{default:f(()=>[u("div",$,I(a.exerciseName),1),P,p(l(y),{name:l(x).ACTIVE_NOTIFY,color:"primary",size:"xl"},null,8,["name"])]),_:1}))}}),X={class:"text-h6 q-mb-sm"},L=R({__name:"ActiveExerciseCard",props:{name:null,tracks:null,id:null,parentId:null},setup(a){const o=a,{log:c}=g(),m=A();async function _(){try{const s=await i.getFirstByField(r.EXERCISES,v.ID,o==null?void 0:o.parentId);m.openDialog(r.EXERCISES,w.REPORT,s)}catch(s){c.error("TakeMeasurementCard:onReportDialog",s)}}return(s,e)=>(d(),E(l(O),{class:"q-mb-md"},{default:f(()=>[a.tracks===l(D).REMINDER_ONLY?(d(),E(Q,{key:0,exerciseName:a.name},null,8,["exerciseName"])):(d(),E(l(k),{key:1,class:"q-py-sm"},{default:f(()=>[u("div",X,I(a.name),1),p(l(h),{round:"",flat:"",icon:l(x).REPORT,class:"absolute-top-right q-ma-sm",onClick:e[0]||(e[0]=n=>_())},null,8,["icon"]),u("div",null,I(a.tracks),1),u("div",null,"Active Exercise Record Id: "+I(a.id),1),u("div",null,"Exercise Id (Parent): "+I(a.parentId),1)]),_:1}))]),_:1}))}}),K=R({__name:"ActiveExercisesList",setup(a){const{log:o}=g(),c=S([]),m=S([]);T(async()=>{try{const e=(await i.getAll(r.ACTIVE_WORKOUTS))[0];c.value=await Promise.all(e==null?void 0:e.exerciseRecordIds.map(async t=>await i.getFirstByField(r.ACTIVE_EXERCISES,v.ID,t)));const n=await Promise.all(c.value.map(async t=>await i.getFirstByField(r.EXERCISES,v.ID,t.parentId)));m.value=n}catch(e){o.error("ActiveExercisesList:onMounted",e)}});function _(e){var n;return(n=m.value.find(t=>t.id===e))==null?void 0:n.name}function s(e){var n;return(n=m.value.find(t=>t.id===e))==null?void 0:n.exerciseTracks}return(e,n)=>(d(!0),C(F,null,N(c.value,t=>(d(),C("div",{key:t.id,class:"col-sm-6 col-xs-12"},[p(L,{name:_(t.parentId),tracks:s(t.parentId),id:t.id,parentId:t.parentId},null,8,["name","tracks","id","parentId"])]))),128))}}),M={class:"row justify-center"},U={class:"col-12"},j={class:"row justify-center q-mt-lg"},Y=R({__name:"ActiveWorkoutPage",setup(a){const{log:o}=g(),{confirmDialog:c}=B(),m=V();async function _(){c("Finish Current Workout","You you ready to finish and save this workout?",x.SAVE,W.INFO,async()=>{try{const s=(await i.getAll(r.ACTIVE_WORKOUTS))[0],e=await i.getAll(r.ACTIVE_EXERCISES);s.finishedDate=new Date().toISOString(),await i.bulkAdd(r.EXERCISE_RECORDS,e),await i.add(r.WORKOUT_RECORDS,s),await i.clear(r.ACTIVE_EXERCISES),await i.clear(r.ACTIVE_WORKOUTS),m.push({name:b.DASHBOARD})}catch(s){o.error("ActiveWorkoutPage:finishWorkout",s)}})}return(s,e)=>(d(),E(l(q),{padding:""},{default:f(()=>[u("div",M,[u("div",U,[p(K)])]),u("div",j,[p(h,{label:"Finish Workout",color:"positive",onClick:e[0]||(e[0]=n=>_())})])]),_:1}))}}),G=R({__name:"ActiveWorkoutView",setup(a){return(o,c)=>(d(),E(Y))}});export{G as default};
